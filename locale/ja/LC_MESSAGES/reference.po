# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020
# This file is distributed under the same license as the CoFEA Initiative package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CoFEA Initiative\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-16 01:05+0000\n"
"PO-Revision-Date: 2021-05-14 14:56+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/120662/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../CoFEA/docs/reference/about_us.md:1
msgid "CoFEA Team"
msgstr "CoFEAチーム"

#: ../../CoFEA/docs/reference/about_us.md:3
msgid "Authors"
msgstr "著者"

#: ../../CoFEA/docs/reference/about_us.md:5
msgid ""
"[Slaw Polanski](https://www.linkedin.com/in/slawomirpolanski/) - originator "
"of CoFEA initiative and simulation engineer. In CoFEA team he is responsible"
" for supervision of the project and technical expertise."
msgstr ""
"[Slaw Polanski](https://www.linkedin.com/in/slawomirpolanski/) - "
"CoFEA計画の創始者であり、シミュレーション・エンジニアです。CoFEAチームでは、プロジェクトの監督と技術的専門知識を担当します。"

#: ../../CoFEA/docs/reference/about_us.md:7
msgid ""
"[Maciej Dudek](https://www.linkedin.com/in/dudek-maciej/) - mechanical "
"engineering student who is passionate about FEA and Linux. His main "
"responsibilities are conducting the FEA simulations and postprocessing "
"results with Python."
msgstr ""
"[Maciej Dudek](https://www.linkedin.com/in/dudek-maciej/) - "
"機械工学を専攻する学生で、FEAとLinuxに情熱を燃やしています。主な業務は、FEAシミュレーションの実施と、Pythonによるポストプロセスの結果です。"

#: ../../CoFEA/docs/reference/about_us.md:9
msgid "You can also contact us on cofea.project(at)gmail.com"
msgstr "cofea.project(at)gmail.com でもご連絡いただけます。"

#: ../../CoFEA/docs/reference/about_us.md:13
msgid "Contributors"
msgstr "貢献者"

#: ../../CoFEA/docs/reference/about_us.md:15
msgid "Filip Janczak"
msgstr "Filip Janczak"

#: ../../CoFEA/docs/reference/about_us.md:16
msgid "Gabriel Dante Lima Chaves"
msgstr "Gabriel Dante Lima Chaves"

#: ../../CoFEA/docs/reference/blog.md:1
msgid "CoFEA Blog"
msgstr "CoFEAブログ"

#: ../../CoFEA/docs/reference/blog.md:3
msgid "This page will be replaced by ABlog."
msgstr "このページはABlogに置き換えられます。"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:5
msgid ""
"Engineering simulations without limits. The origin of CoFEA Initiative ☕"
msgstr "無制限のエンジニアリングシミュレーション。CoFEA 計画の起源 ☕"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:7
msgid ""
"Although the numerical simulations have been available for engineers for "
"more than 50 years, I don't feel they are as popular as they deserve to be. "
"Some software vendors want to 'democratize' the simulation by simplifying "
"its usage. It might be a way to make simulations more popular, but I am not "
"sure if the term 'democratization' is the right word. As far as I remember "
"the economic status should not matter in a real democracy, but it does "
"matter in the proposed type of democratization. It is very likely that more "
"engineers would use simulations if they weren't that expensive. There is "
"also another flip side of this approach... How much the developers can "
"simplify the usage of software before it becomes a black-box solution? I bet"
" some people would even argue that any software which is not open-source is "
"essentially a black-box, but I am not that strict with the rules."
msgstr ""
"数値シミュレーションは50年以上前からエンジニアに提供されていますが、それほど人気があるとは思えません。一部のソフトウェアベンダーは、シミュレーションの使用法を単純化することで、シミュレーションを"
" '民主化' したいと考えています。シミュレーションをもっと普及させる方法かもしれませんが、 '民主化' という言葉が正しいのかどうかはわかりません。 "
"私が覚えている限りでは、経済的地位は真の民主主義では重要ではありませんが、提案されている民主化のタイプでは重要です。それほど高価でなければ、もっと多くのエンジニアがシミュレーションを使うでしょう。このアプローチには別の側面もあります...ブラックボックスソリューションになる前に、開発者はソフトウェアの使用をどれだけ単純化できるでしょうか?オープンソースでないソフトウェアは基本的にブラックボックスだと主張する人もいるでしょうが、私はルールにそれほど厳しくありません。"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:9
msgid ""
"I must admit I have been thinking for some time on how to introduce computer"
" simulations in more companies. It seems to be a highly complex problem with"
" a non-unique solution. That is why I feel like any contribution will help, "
"so I would like to present my own initiative. Since the beginning of "
"November, I have been working on my new after-hours project which I called "
"CoFEA (Collaboration + Finite Element Analysis). CoFEA is an initiative that"
" aims to bring open-source simulation software closer to the engineering "
"industry problems. The goals of this initiative is to:"
msgstr ""
"正直なところ、コンピュータシミュレーションをより多くの企業に導入する方法について、以前から考えていました。これは、解が一意に定まらない非常に複雑な問題のようです。そこで、どんな貢献でも役に立つと思い、自分の計画を公開したいと思いました。11月の初めから、私はCoFEA"
" (Collaboration+Finite Element Analysis) "
"と名付けた新しい時間外プロジェクトに取り組んでいます。CoFEAは、オープンソースのシミュレーションソフトウェアをエンジニアリング業界の問題に近づけることを目的とした計画です。この計画の目標は次のとおりです:"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:11
msgid "raise awareness of the available open-source simulation software"
msgstr "利用可能なオープンソースシミュレーションソフトウェアの認知度を高める"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:12
msgid ""
"increase confidence in using this software by testing it with benchmarks and"
" real-life problems"
msgstr "ベンチマークと実際の問題でテストすることにより、このソフトウェアの使用に対する信頼性を高める"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:13
msgid "develop Python tools and scripts to make usage easier and simpler"
msgstr "Pythonツールとスクリプトを開発して使いやすくシンプルにする"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:14
msgid ""
"gather information on how to set up the simulation environment correctly"
msgstr "シミュレーション環境を正しく設定する方法"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:16
msgid ""
"I truly believe it is possible to use free tools to solve a lot of "
"engineering problems. Probably not as many as with the commercial software, "
"but still plenty of them. The main issue with the open-source software "
"though is that the know-how is spread over the whole internet. Sometimes it "
"is even hard to find out how to run a code properly. That is why it is "
"important to gather all the knowledge in one place for those who seek it."
msgstr ""
"私は、フリーツールを使って多くの工学的問題を解決することが可能だと信じています。おそらく市販のソフトウェアほど多くはないでしょうが、それでもたくさんあります。しかし、オープンソース・ソフトウェアの最大の問題は、ノウハウがインターネット全体に広がっていることです。場合によっては、コードを適切に実行する方法を見つけるのも困難です。だからこそ、知識を求める人々のために、すべての知識を一つの場所に集めることが重要なのです。"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:18
msgid ""
"Furthermore, knowing how to run a simulation is not equal to having "
"confidence in its results. The database of benchmarks allows not only to "
"check if the software gives a correct answer but also to find out which code"
" is the most appropriate to use."
msgstr ""
"さらに、シミュレーションの実行方法を知っていることと、結果を信頼していることは同じではありません。ベンチマークのデータベースは、ソフトウェアが正しい答えを与えるかどうかをチェックするだけでなく、どのコードが使用するのに最も適しているかを見つけることもできます。"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:20
msgid ""
"Another pitfall of the open-source software is the lack of compatibility "
"between the codes. Some codes are great for mesh generation, some have great"
" solvers and some have great post-processing capabilities. I haven't found "
"open-source software which meets all these conditions. This obstacle is "
"another goal of the CoFEA Initiative - to create a Python library which "
"converts simulation data into format possible to use in multiple codes."
msgstr ""
"オープンソースソフトウェアのもう1つの落とし穴は、コード間の互換性の欠如です。メッシュ生成に適したコードもあれば、優れたソルバを持つコードもあれば、優れた後処理機能を持つコードもあります。これらすべての条件を満たすオープンソースソフトウェアを私は見つけていません。この障害は、シミュレーションデータを複数のコードで使用できる形式に変換するPythonライブラリを作成するという、CoFEA計画のもう1つの目標です。"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:22
msgid ""
"All of these tasks have been tackled since the origin of the project. "
"Fortunately, I was not alone in this journey - with the great help of Maciej"
" Dudek I was able to do more than I was initially aiming for. We chose the "
"tuning fork model for the first benchmark in the CoFEA database. Despite the"
" model simplicity, the study clearly shows that the fine mesh needs be used "
"to be able to pick the frequency of 440 Hz. We have tested it in Calculix, "
"Code Aster and Elmer - all give the same correct answer!"
msgstr ""
"これらの課題はすべて、プロジェクトの起源以来取り組まれてきました。幸運なことに、この旅に参加したのは私だけではありませんでした。Maciej "
"Dudekの多大な助けによって、私は当初の目標以上のことを成し遂げることができたのです。CoFEAデータベースの最初のベンチマークとして音叉モデルを選択しました。モデルが単純であるにもかかわらず、この解析は、440Hzの周波数を選択できるように細かいメッシュを使用する必要があることを明確に示しました。Calculix、Code"
" Aster、Elmerでテストしましたが、どれも同じで正解でした!"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:24
msgid ""
"We have also managed to set up the Paraview Glance server. This remarkable "
"solution will enable us to show the simulation results directly on the web. "
"At the moment, it is used only to show the tuning fork geometry and let the "
"user play with it, but it has enormous potential when it gets to show what "
"can be done with the open-source software. Click on this link to see exactly"
" how it works!"
msgstr ""
"Paraview "
"Glanceサーバもセットアップできました。この素晴らしいソルーションにより、シミュレーション結果をWeb上で直接示すことが可能になりました。現時点では、音叉の形状を示してユーザーに再生させるためだけに使用されていますが、オープンソースソフトウェアで何ができるかを示すときには、非常に大きな可能性があります。現時点では、音叉の形状を表示してユーザーに再生させるためだけに使用されていますが、オープンソースソフトウェアで何ができるかを示すときには、非常に大きな可能性があります。このリンクをクリックすると、正確に機能します!"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:26
msgid ""
"The CoFEA Initiative is built in a way that everyone can contribute. The "
"Python code and the whole website is available on GitHub. Any modification "
"made on GitHub invokes automatic compilation of HTML website on ReadTheDocs "
"server using Sphinx and in this way, everyone can feel that is a part of "
"this initiative."
msgstr ""
"CoFEAイニシアティブは、誰もが貢献できるように構築されています。Pythonコードとウェブサイト全体はGitHubで公開されています。GitHubに変更を加えると、Sphinxを使ってReadTheDocsサーバ上でHTML"
" Webサイトの自動コンパイルが起動されます。誰もがこの計画の一部だと感じることができます。"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:28
msgid "So how to contribute? There are plenty of ways:"
msgstr "ではどう貢献するのか? さまざまな方法があります:"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:29
msgid ""
"if you know how to use simulation software then you can help to make models"
msgstr "シミュレーションソフトの使い方を知っていればモデルの作成を手伝うことができます"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:30
msgid ""
"if you possess programming skills then you can help to develop CoFEA mesh "
"converter"
msgstr "プログラミングスキルがあれば、CoFEAメッシュコンバータの開発を支援できます。"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:31
msgid "if you are good at writing then you can help to develop the website"
msgstr "もしあなたが文章を書くのが得意なら、ウェブサイトの開発を手伝うことができます。"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:32
msgid ""
"if you don’t think you have anything from the above, but you are eager to "
"help just let me know! Either contact me on LinkedIn or send an email to "
"cofea.project(at)gmail.com"
msgstr ""
"上記のものを何も持っていないと思っても、私に知らせて欲しい! LinkedInで私に連絡するか、 cofea.project(at)gmail.com "
"にメールを送ってください。"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:34
msgid ""
"Finally, if you have any old FE input decks which were validated and you can"
" share them, let me know! We will give them another life by checking them in"
" the open-source software."
msgstr ""
"最後に、検証済みの古いFE入力デッキがあり、それらを共有できる場合は、教えてください!オープンソースソフトウェアでそれらをチェックすることによって、それらに別の命を与えます。"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:36
msgid "Let's make this initiative valuable for all of us!"
msgstr "この計画をすべての人にとって価値あるものにしましょう!"

#: ../../CoFEA/docs/reference/blog/2020-12-10.md:38
msgid ""
"[Follow the CoFEA Initiative on "
"Twitter](https://twitter.com/CoFEAinitiative)"
msgstr "[TwitterでCoFEA計画をフォローする](https://twitter.com/CoFEAinitiative)"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:5
msgid "April 2021"
msgstr "2021年4月"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:7
msgid ""
"Few months have passed since the last update from CoFEA Initiative, but it "
"does not mean nothing has been done. Quite contrary! We tested five models, "
"improved the website and connected some dots to establish a simulation "
"workflow based on available open-source software."
msgstr ""
"CoFEA計画の前回の更新から数ヵ月が経過しましたが、何も行われていないわけではありません。まったく逆です! "
"5つのモデルをテストし、ウェブサイトを改善し、いくつかの点を接続して、利用可能なオープンソースソフトウェアに基づくシミュレーションワークフローを確立しました。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:9
msgid "**Simulation workflow**"
msgstr "**シミュレーションワークフロー**"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:10
msgid ""
"The following section describes the simulation workflow that we followed "
"when building the models."
msgstr "次のセクションでは、モデルの構築時に使用したシミュレーションワークフローについて説明します。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:12
msgid "FE simulation workflow based on non-commercial software"
msgstr "非商用ソフトウェアに基づくFEシミュレーションワークフロー"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:20
msgid "Salome vs Salome-Meca"
msgstr "Salome 対 Salome-Meca"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:22
msgid ""
"At first, it is worth clarifying the Salome package distribution: Salome and"
" Salome-Meca. Actually, there is only one minor difference between these "
"two. The \"ordinary\" Salome comes with many useful modules such as Shaper, "
"GEOM, Mesh and ParaVIS (modified Paraview for Salome and Code_Aster), where "
"Salome-Meca has an additional one called Aster_Study (pre-processor for "
"Code_Aster) and contains the pre-compiled Code_Aster solver (this version "
"supports only single-threaded calculations)."
msgstr ""
"まず、Salomeパッケージのディストリビューションを明らかにすることが重要です: SalomeとSalome-"
"Mecaです。実はには、この2つの間には1つの小さな違いしかありません。 \"普通の\" "
"サロメには、Shaper、GEOM、Mesh、ParaVIS(SalomeとCode_Aster用に修正されたParaview)のような多くの有用なモジュールが付属しています"
"。Salome-"
"MecaにはAster_Study(Code_Aster用のプリプロセッサ)と呼ばれる追加モジュールがあり、コンパイル済みのCode_Asterソルバが含まれています(このバージョンはシングルスレッド計算のみをサポートしています)。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:24
msgid "Shaper module"
msgstr "Shaperモジュール"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:26
msgid ""
"Shaper is by now the newest module in the Salome package. It supports "
"parametric modelling with the use of sketches extrusions, revolutions and "
"also boolean operations. If you are familiar with any 3D CAD software you "
"should not have any troubles with making models. The software might not be "
"as robust as SolidWorks, NX and the rest of the crew but hey, it is only one"
" year old and totally for free. Once you make your part in the Shaper "
"module, remember to export it to the GEOM module. Otherwise, you will not be"
" able to create groups for meshing."
msgstr ""
"ShaperはSalomeパッケージの最新モジュールです。概要の押し出し、回転、およびブール演算を使用したパラメトリックモデリングをサポートしています。3D"
" "
"CADソフトウェアを使い慣れている場合は、モデルの作成に問題はありません。このソフトウェアは、SolidWorksやNXなどの他のクルーほど堅牢ではないかもしれないが、まだ1年しか経っていないし、完全に無料です。Shaperモジュールで作成したパーツは、必ずGEOMモジュールにエクスポートしてください。そうしないと、メッシュ作成用のグループを作成できません。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:28
msgid "Creation of hemisphere using Shaper"
msgstr "Shaperを使用した半球の作成"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:36
msgid "GEOM module"
msgstr "GEOMモジュール"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:38
msgid ""
"GEOM is an ancestor of previously discussed Shaper. It provides versatile "
"functionalities for the creation, visualisation and modification of "
"geometric CAD models. In our workflow, we use it for group generations from "
"CAD geometry which later can be transformed into groups of elements or "
"nodes."
msgstr ""
"GEOMは、前に説明したShaperの祖先です。ジオメトリCADモデルの作成、視覚化、および修正のためのさまざまな機能を提供します。このワークフローでは、後で要素またはノードのグループに変換できるCADジオメトリからのグループ生成に使用します。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:40
msgid "Mesh module"
msgstr "Meshモジュール"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:42
msgid ""
"The goal of this module is simply to create the mesh based on geometrical "
"models created in the GEOM module (or imported from the Shaper). It supports"
" tri/tet and quad/hex meshes and enables the creation of node and element "
"sets."
msgstr ""
"このモジュールの目的は、単にGEOMモジュールで作成された(またはShaperからインポートされた)ジオメトリモデルに基づいてメッシュを作成することです。三角/四辺形および四角/六角形メッシュをサポートし、ノードおよび要素セットの作成を可能にします。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:44
msgid ""
"The meshes created in Salome are not compatible with CalculiX. While the "
"exported UNV file can be converted into an INP file with the "
"[UNV2CCX](https://github.com/calculix/unv2ccx) converter, a different "
"problem related to mesh data may occur. For example, every line in the UNV "
"file is treated as a beam element in the INP file. A similar problem occurs "
"for the 2D geometric features. To avoid having unnecessary element types in "
"the INP file, one needs to delete them first in Salome and then export the "
"UNV file. The procedure to do so is the following:"
msgstr ""
"Salomeで作成されたメッシュは、Calculexと互換性がありません。エクスポートされたUNVファイルは[UNV2CCX](https://github.com/calculix/unv2ccx)コンバータでINPファイルに変換できますが、メッシュデータに関する別の問題が発生することがあります。"
" "
"たとえば、UNVファイル内のすべての行は、INPファイル内のビーム要素として扱われます。同様の問題は、2Dジオメトリフィーチャーでも発生します。INPファイルに不要な要素タイプが含まれないようにするには、まずサロメで要素タイプを削除してからUNVファイルをエクスポートする必要があります。"
" その手順は次のとおりです:"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:45
msgid ""
"create the groups on mesh with \"Create Groups from Geometry\" (the "
"previously created groups in GEOM are used here),"
msgstr "\"ジオメトリからグループを作成\"を使用してメッシュ上にグループを作成します(ここでは、以前にGEOMで作成したグループを使用します)。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:46
msgid "delete undesired entities with \"Delete Groups with Contents\"."
msgstr "\"内容のあるグループを削除\" で不要なエンティティを削除します。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:50
msgid "Example of the meshed hemisphere"
msgstr "半球メッシュの例"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:59
msgid "unv2ccx converter"
msgstr "unv2ccxコンバータ"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:61
msgid ""
"The use of an unv2ccx converter is pretty straightforward. Just export your "
"mesh to .unv format and then type the command:"
msgstr "unv2ccxコンバータの使用は非常に簡単です。メッシュを.unvフォーマットにエクスポートし、次のコマンドを入力します。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:67
msgid ""
"and voila, your mesh should be converted. Unfortunately, the converter "
"doesn't support choosing the elements during conversion therefore sometimes "
"element type need to be edited manually in the converted .inp file."
msgstr ""
"メッシュを変換する必要があります。残念ながら、コンバータは変換中のエレメントの選択をサポートしていないため、変換後の.inpファイルでエレメントタイプを手動で編集する必要がある場合があります。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:69
msgid "ccx2paraview"
msgstr "ccx2paraview"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:71
msgid "To convert .frd results to vtk just type this command:"
msgstr "frdの結果をVTKに変換するには、次のコマンドを入力します:"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:76
msgid "ElmerGrid"
msgstr "ElmerGrid"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:78
msgid ""
"ElmerGrid is generally a robust converter which supports the various format "
"of meshes, but it has some drawbacks. The rule of thumb is to avoid using "
"node sets as ElmerGUI doesn't support it. It is also worth considering every"
" mesh as a standalone case (for example one mesh will convert without any "
"additional flags and the same mesh with quad elements would need a couple of"
" them). Before the conversion process please read the manual and get "
"familiar with these flags: -boundorder, -removelowdim, -removeunused, "
"-bulkorder, -autoclean. They could greatly help you with successful mesh "
"conversion. The .unv mesh is converted with the following command:"
msgstr ""
"一般的に、ElmerGridはさまざまな形式のメッシュをサポートする堅牢なコンバータですが、いくつかの欠点があります。ノードセットを使用しないようにするのが経験則です。また、すべてのメッシュをスタンドアロンのケースとして解析することも重要です(たとえば、1つのメッシュは追加のフラグなしで変換されますが、同じメッシュに四角形要素がある場合は、それらのいくつかが必要になります)。変換プロセスの前に、マニュアルを読んでこれらのフラグを理解してください:"
" -boundorder, -removelowdim, -removeunused, -bulkorder, "
"-autoclean。メッシュ変換を成功させる上で非常に役立ちます。 .unv メッシュは次のコマンドで変換されます。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:83
msgid "**Benchmark conclusions**"
msgstr "**ベンチマークの結論**"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:85
msgid ""
"Five simulation benchmarks modelled in Salome / Code_Aster, Calculix and "
"Elmer gave us some insight into what these codes can do. It is definitely "
"the case that we only scratched the surface, but the simple tests let us "
"also find out how user-friendly a particular software is."
msgstr ""
"Salome/Code_Aster、Calculex、Elmerでモデル化された5つのシミュレーションベンチマークは、これらのコードが何をすることができるかについての洞察を与えてくれた。確かに表面をかじっただけですが、簡単なテストによって、特定のソフトウェアがどれだけ使いやすいものかを知ることができます。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:87
msgid "User feeling"
msgstr "ユーザーの感覚"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:88
msgid ""
"If user-friendliness is of interests then we have been quite positively "
"surprised. The latest version of Salome-Meca is definitely one of the "
"greatest environments which are available for free. Rumour has it that the "
"French language has been a bit problematic for user to feel sure that they "
"know what they do. The version available since 2019 has been translated into"
" English quite well ('well' in non-native standards). A model can be built "
"in it from scratch, meshed, solved and post-process. For users who know what"
" to look for it will not take long to find the right tool. The others will "
"not find the learning curve very steep as well."
msgstr ""
"ユーザーフレンドリーであることが興味の対象であれば、われわれはかなり積極的に驚いています。Salome-"
"Mecaの最新バージョンは、間違いなく無料で入手できる最高の環境の一つです。噂によると、フランス語はユーザーが自分が何をしているかを知っていると確信するには少々問題があるとのことですが、2019年から利用可能なバージョンは、かなり上手に英語に翻訳されています(非ネイティブ"
" 'としては' "
")。モデルは、最初から作成し、メッシュし、解析し、ポストプロセスで作成できます。何を探せばよいかを知っているユーザーにとっては、適切なツールを見つけるのに時間はかからないでしょう。他の人たちも、学習曲線がそれほど急なものではないでしょう。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:90
msgid ""
"As presented in the simulation workflow chart, we used a mix of Salome-Meca,"
" PrePoMax and Calculix Advanced Environment to build models for Calculix. It"
" is very easy to build a final model in PrePoMax / CAE having already "
"prepared mesh. It is worth saying that it wasn't that easy a few years ago "
"when these apps did not exist. Of course, they have some glitches, like for "
"example, the latest version of PrePoMax doesn't allow to assign section in "
"some situations... but at the end of the day they are quite handy and that's"
" why it is worth checking them."
msgstr ""
"シミュレーションワークフローチャートに示すように、Salome-Meca、PrePoMax、Calculix Advanced "
"Environmentを組み合わせてCalculixのモデルを構築しました。既にメッシュを準備したPrePoMax/CAEで最終モデルを構築することは非常に容易です。これらのアプリが存在しなかった数年前は、それほど簡単なことではありませんでした。もちろん、いくつかの不具合があります。例えば、最新バージョンのPrePoMaxでは、いくつかの状況でセクションを割り当てることができません.しかし、結局、それらは非常に便利であり、それゆえそれらをチェックする価値があります。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:92
msgid ""
"Elmer was the third code we were testing. The GUI looks very simple, but "
"don't judge the book by the cover. It actually contains the most important "
"options which allow to set up solver, material, loads etc. Then a user can "
"add some options manually either using keyword editor or directly through "
"the text editor. What is worth saying is that Elmer does not always "
"correctly imported the UNV file exported from Salome (90% of cases were "
"fine). If it could import node sets into the GUI then that would be very "
"useful. Apart from that, it seems to us that the code has very strong "
"capabilities if someone is interested in multiphysics simulation."
msgstr ""
"エルマーはテストしていた3番目のコードです。GUIは非常に単純に見えますが、本を表紙で判断しないでください。実際には、ソルバ、マテリアル、荷重などを設定できる最も重要なオプションが含まれています。ユーザは、キーワードエディタを使用して手動でオプションを追加することも、テキストエディタを使用して直接オプションを追加することもできます。ただし、ElmerがSalomeからエクスポートされたUNVファイルを常に正しくインポートしているわけではありません(90%のケースは問題ありません)。ノードセットをGUIにインポートできるなら、非常に便利です。それとは別に、誰かがマルチフィジックスシミュレーションに興味を持っていれば、このコードは非常に強力な能力を持っているように思われます。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:94
msgid "Software accuracy"
msgstr "ソフトウェアの精度"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:95
msgid ""
"The most important conclusion about the results is that the free software "
"can do a very good job. We achieved the target solutions in all of the "
"tested cases. It can also be seen that in most cases for the same mesh the "
"results are very similar. We think that it might be due to a similar element"
" implementation. For models with such a small DOF number, it was "
"unreasonable to perform a performance comparison, but there are plans to "
"perform such tests in the future. It is also worth noting that we tried to "
"make all the meshes as close as possible to the patterns recommended by "
"NAFEMS."
msgstr ""
"結果に関する最も重要な結論は、フリーソフトウェアは非常に良い仕事ができるということです。すべての解析事例において目標の解決を達成した。 "
"また、ほとんどの場合、同じメッシュの結果は非常に類似しています。これは、同様の要素の実装が原因であると考えられます。このような小さなDOF数のモデルでは、性能比較を実施するのは不合理でしたが、将来このような試験を実施する計画があります。また、NAFEMSで推奨されているパターンにできるだけ近いメッシュを作成しようとしたことも注目に値します。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:97
msgid ""
"It has been already proven that a correct solution for the tuning fork "
"benchmark can be obtained using Calculix, Code_Aster and Elmer. With this "
"update, we added result from a test performed using MoFEM code. This Finite "
"Element implementation uses some high-order element shape functions and they"
" allow to achieve quite spectacular results even with coarser mesh. We would"
" like to thank [Lukasz Kaczmarczyk](https://twitter.com/LukaszKaczmarcz) for"
" running the eigenvalue analysis for this scenario."
msgstr ""
" Calculix, Code_Aster, Elmerを用いて音叉ベンチマークの正しい解が得られることは既に証明されています。今回の更新では, "
"MoFEMコードを用いて行った試験結果を追加した。この有限要素の実装では、いくつかの高次要素形状関数を使用しており、粗いメッシュを使用しても非常に優れた結果を得ることができます。このシナリオの固有値解析を実行してくれた"
" [Lukasz Kaczmarczyk](https://twitter.com/LukaszKaczmarcz) に感謝します。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:99
msgid "Tuning fork simulation performed in MoFEM"
msgstr "MoFEMによる音叉シミュレーション"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:108
msgid ""
"The outcome from the thick plate under pressure case is that it is easy to "
"achieve correct results for a linear model driven by pressure load. The "
"target solution was achieved with both tetrahedral and hexahedral elements."
msgstr ""
"圧力下の厚板の結果は、圧力荷重によって駆動される線形モデルに対して、正しい結果を容易に得ることができるということです。四面体および六面体要素の両方で目標解を達成しました。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:110
msgid ""
"In Cook's membrane benchmark, the semi-incompressible material was tested. "
"Two values of Poisson's value were examined for the linear material model "
"with low Young's modulus value. It turned out that it might not be feasible "
"to use the linear type of elements to obtain a decent solution. A solution "
"closed to the target value was obtained with quadratic type elements."
msgstr ""
"Cookの膜ベンチマークでは、半非圧縮性材料を試験しました。ヤング率値が低い線形材料モデルについて,ポアソン値の2つの値を調べました。線形タイプの要素を使用して適切な解を得ることは現実的ではないことが分かりました。2次形式要素を用いて目標値に近い解を得ました。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:112
msgid ""
"With the elliptic membrane under pressure model, the aim was to test the "
"response from a study with the plane stress elements. The benchmark "
"convinced us that it is fairly simple to set up a 2D model and achieve the "
"correct solution."
msgstr ""
" 圧力下楕円膜モデルでは、平面応力要素を使用した解析からの応答をテストすることを目的としています。このベンチマークにより、2 "
"Dモデルを設定して適切なソリューションを実現するのは非常に簡単であることがわかりました。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:114
msgid ""
"It can be said that the last model of the hemispherical shell point load "
"model was the most cumbersome to examine. The tests with Code_Aster were "
"quite straightforward, but it took a while to troubleshoot the response in "
"both, Calculix and Elmer. The final conclusion from the tests with Calculix "
"is that the shell implementation does not allow to achieve the correct "
"solution. It seems to us that the symmetry boundary condition has a "
"significant impact on the accuracy of results. The correct solution was "
"achieved with solid elements, which proved our setup to be correct, but "
"usage of those elements was not the point of the study. Setting up symmetry "
"condition for shell elements in Elmer required some tests and the target "
"value was eventually achieved, but for the model with very fine mesh only. "
"The NAFEMS mesh setup does not allow to obtain a decent response, but it "
"should also be noted that the shell implementation in Elmer is still in its'"
" early phase of development. We would like to also say thank you to all "
"people at the Elmer forum who helped us to debug the model."
msgstr ""
"半球状シェル点荷重モデルの最後のモデルは、調べるのが最も面倒だったと言えます。Code_Asterを使用したテストは非常に単純でしたが、CalculixとElmerの両方で応答のトラブルシューティングに時間がかかりました。Calculixを使ったテストの最終的な結論は、シェルの実装では正しい解を得ることができないということです。対称境界条件は結果の精度に大きな影響を与えると思われます。固体要素では正しい解が得られ、設定が正しいことが証明されましたが、これらの要素の使用はこの解析の目的ではありませんでした。"
" "
"Elmerでシェル要素の対称条件を設定するにはいくつかのテストが必要であり、最終的に目標値を達成しましたが、メッシュが非常に細かいモデルの場合のみです。NAFEMSメッシュ設定では適切な応答を得ることはできませんが、Elmerでのシェル実装はまだ開発の初期段階にあることにも注意してください。また、モデルのデバッグに協力してくれたElmerフォーラムのすべての方々にも感謝します。"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:159
msgid "Additional notes"
msgstr "その他の注意事項"

#: ../../CoFEA/docs/reference/blog/2021-04-01.md:161
msgid ""
"It is also worth noting that the work hasn't been done only on the "
"simulation side. As shown above, we have managed to implement the "
"[ipygany]() extension into our website. This extension let us present "
"interactive plots exported directly from Paraview. Also, we have expanded "
"our Contribution Guide which now describes how to compile the CoFEA docs "
"locally and how to contribute to the initiative."
msgstr ""
"また、この作業はシミュレーションのみで行われたわけではありません。上に示したように、我々のウェブサイトに [ipygany]() "
"拡張を実装することができました。 この拡張機能を使用すると、Paraviewから直接書き出されたインタラクティブなプロットを表示できます。また、 "
"貢献者ガイドを拡充し、CoFEA文書のローカルでの編集方法や取り組みへの貢献方法について説明しています。"

#: ../../CoFEA/docs/reference/contributor_guide.md:1
msgid "Contributor Guide"
msgstr "貢献者ガイド"

#: ../../CoFEA/docs/reference/contributor_guide.md:3
msgid ""
"Here is a quick introduction on how to start contributing to the CoFEA "
"Initiative. At first, you can acknowledge yourself with the rules we try to "
"follow:"
msgstr "CoFEA計画への貢献を開始する方法を簡単に紹介します。最初に、私たちが従うべきルールを自分自身に認めてください:"

#: ../../CoFEA/docs/reference/contributor_guide.md:4
msgid ""
"if you are not familiar with programming, compilation etc, we recommend "
"using Ubuntu 18.0 (or any Debian based Linux) as your main environment. We "
"tend to use this distribution and all guidelines presented in this docs have"
" been validated with this OS."
msgstr ""
"プログラミングやコンパイルなどに慣れていない場合は、メイン環境としてUbuntu 18.0 (またはDebianベースのLinux) "
"を使用することをお勧めします。私たちはこのディストリビューションを使う傾向があり、この文書で紹介されているすべてのガイドラインはこのOSで検証されています。"

#: ../../CoFEA/docs/reference/contributor_guide.md:5
msgid ""
"we use GitHub website as a place to store the code, docs and everything "
"else. As a result of that, if you would like to contribute to CoFEA you "
"should have an account on this platform to be able to fork the [CoFEA "
"repository](https://github.com/spolanski/CoFEA), add your changes and send a"
" modified version back. That also implies that you ought to have basic "
"understanding of *git* version control system and the nomenclature used on "
"GitHub (such as pull request, fork etc.)"
msgstr ""
"コードやドキュメントなどを保存する場所としてGitHubのウェブサイトを使っています。その結果、CoFEAに投稿したい場合は、 [CoFEA "
"repository](https://github.com/spolanski/CoFEA) "
"をフォークし、変更を加え、変更したバージョンを送り返すことができるように、このプラットフォームのアカウントを持っている必要があります。 また、あなたは "
"*git* のバージョン管理システムとGitHubで使われている命名法(たとえば、プル要求、フォークなどです。)の基本を理解している必要があります。"

#: ../../CoFEA/docs/reference/contributor_guide.md:6
msgid ""
"while it would be nice to use Python 3.x only, some FE codes (for example "
"Salome) are still using Python version 2.7. Due to that, all scripts which "
"are developed should be developed in a way that is more or less compatible "
"with 2.x and 3.x versions."
msgstr ""
"Python 3.xのみを使用すると便利ですが、一部のFEコード (たとえば、Salome) "
"はまだPythonバージョン2.7を使用しています。そのため、開発されるすべてのスクリプトは、2.xおよび3.xバージョンとほぼ互換性のある方法で開発する必要があります。"

#: ../../CoFEA/docs/reference/contributor_guide.md:7
msgid ""
"All the tasks we are currently working on are presented in the [CoFEA Github"
" issues](https://github.com/spolanski/CoFEA/issues)"
msgstr ""
"私たちが現在取り組んでいるすべてのタスクは、 [CoFEA Github "
"issues](https://github.com/spolanski/CoFEA/issues) に提示されています。"

#: ../../CoFEA/docs/reference/contributor_guide.md:8
msgid ""
"While still not in place, please use snake_case for naming instead of "
"camelCase rule or any different"
msgstr "新しく整備する場合は、camelCaseルールまたは他の任意のルールの代わりにsnake_caseを使用して命名してください"

#: ../../CoFEA/docs/reference/contributor_guide.md:10
msgid "Documentation contribution"
msgstr "ドキュメントの貢献"

#: ../../CoFEA/docs/reference/contributor_guide.md:12
msgid ""
"Your journey as a contributor should start with getting the copy CoFEA docs "
"onto your hard-drive. It is actually very simple to recreate the website "
"locally. You can do it by running following commands from terminal:"
msgstr ""
"コントリビューターとしての旅は、CoFEA文書のコピーをハードドライブに保存することから始める必要があります。Webサイトをローカルに再作成するのは非常に簡単です。これを行うには、ターミナルから次のコマンドを実行します。"

#: ../../CoFEA/docs/reference/contributor_guide.md:37
msgid ""
"That's it! if you follow the steps above, you will compile the website "
"locally. Then you can modify the files and send them back to the CoFEA "
"github using git push command. We are looking forward to your contribution!"
msgstr ""
"以上です! 上記の手順に従うと、Webサイトをローカルでコンパイルできます。その後、ファイルを変更し、git pushコマンドを使用してCoFEA "
"githubに送ることができます。私たちはあなたの貢献を楽しみにしています!"

#: ../../CoFEA/docs/reference/contributor_guide.md:39
msgid ""
"Looking for a task to do? Check [CoFEA documentation "
"issue](https://github.com/spolanski/CoFEA/issues/27). It contains several "
"things that we would like to implement. Pick one and [create a Github "
"issue](https://github.com/spolanski/CoFEA/issues/new/choose), so everyone "
"knows that someone is working on it. After that send a pull request and your"
" work will be merged soon."
msgstr ""
"やるべき仕事を探している? "
"[CoFEAドキュメントのissue](https://github.com/spolanski/CoFEA/issues/27) "
"を確認してください。これには、実装したいいくつかのものが含まれています。一つ選んで [Github "
"issueを作成してください](https://github.com/spolanski/CoFEA/issues/new/choose)、誰かが取り組んでいることがわかります。"
" その後プルリクエストを送信すると、作業はすぐにマージされます。"

#: ../../CoFEA/docs/reference/contributor_guide.md:43
msgid "FE work contribution"
msgstr "FE作業の貢献"

#: ../../CoFEA/docs/reference/contributor_guide.md:45
msgid ""
"Once the documentation works, you can set up the simulation environment. The"
" CoFEA workflow currently used by contributors is following:"
msgstr "ドキュメントが機能したら、シミュレーション環境を設定できます。共同作成者が現在使用しているCoFEAワークフローは次のとおりです:"

#: ../../CoFEA/docs/reference/contributor_guide.md:46
msgid "Salome_Meca 2019.3 is used to build/import geometries and meshes"
msgstr "Salome_Meca 2019.3を使用して形状とメッシュを作成/インポートします"

#: ../../CoFEA/docs/reference/contributor_guide.md:47
msgid "Established model is tested in Code_Aster"
msgstr "確立されたモデルはCode_Asterでテストされます"

#: ../../CoFEA/docs/reference/contributor_guide.md:48
msgid ""
"Meshes are converted into format appropriate to run study in Calculix and "
"Elmer"
msgstr "メッシュは、CalculixおよびElmerで解析を実行するのに適した形式に変換されます。"

#: ../../CoFEA/docs/reference/contributor_guide.md:49
msgid ""
"Optionally, the same setup is tested in different codes which are also free "
"and open-source."
msgstr "オプションとして、同じセットアップが、フリーでオープンソースの異なるコードでテストされます。"

#: ../../CoFEA/docs/reference/contributor_guide.md:51
msgid ""
"The best way way to contribute is to install Salome_Meca with Code_Aster, "
"Calculix and Elmer, so that you could build your own models and contribute "
"to the CoFEA initiative."
msgstr ""
"貢献する最善の方法は、Code_Aster、Calculix、およびElmerとともにSalome_Mecaをインストールし、独自のモデルを構築してCoFEAイニシアチブに貢献できるようにすることです。貢献する最善の方法は、Code_Aster、Calculix、およびElmerとともにSalome_Mecaをインストールし、独自のモデルを構築してCoFEA計画に貢献できるようにすることです。"

#: ../../CoFEA/docs/reference/contributor_guide.md:53
msgid ""
"Looking for a task to do? Check [FEA work "
"issue](https://github.com/spolanski/CoFEA/issues/51). It contains several "
"examples that we would like to test. Pick one and [create a Github "
"issue](https://github.com/spolanski/CoFEA/issues/new/choose), so everyone "
"knows that someone is working on it. After that send a pull request and your"
" work will be merged soon."
msgstr ""
"やるべき仕事を探している? [FEA作業のissue](https://github.com/spolanski/CoFEA/issues/51) "
"を確認してください。これには、テストしたいいくつかの例が含まれています。一つ選んで [Github "
"issueを作成してください](https://github.com/spolanski/CoFEA/issues/new/choose)、誰かが取り組んでいることがわかります。"
" その後プルリクエストを送信すると、作業はすぐにマージされます。"

#: ../../CoFEA/docs/reference/contributor_guide.md:57
msgid ""
"If you are an FE code developer and you would like to submit your own "
"example or show results for already existing benchmark, feel free to add "
"your contribution to the Benchmarks folder and send pull request."
msgstr ""
"FEコード開発者で、独自のサンプルを提出したり、既存のベンチマークの結果を表示したい場合は、Benchmarksフォルダに自由に投稿を追加してプルリクエストを送信してください。"

#: ../../CoFEA/docs/reference/contributor_guide.md:62
msgid "Python scripts contribution"
msgstr "Pythonスクリプトの貢献"

#: ../../CoFEA/docs/reference/contributor_guide.md:64
msgid ""
"At the moment, the most work is done on the [Meshpresso Mesh "
"Converter](../meshpresso/index.md). More information on how to contribute "
"will be provided soon."
msgstr ""
"現在のところ、ほとんどの作業は [Meshpresso Mesh Converter](../meshpresso/index.md) "
"上で行われています。どのように貢献するかについての詳細は、まもなく提供される予定です。"
